// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`dumb component renders for individual 1`] = `
<Grid
  bsClass="container"
  componentClass="div"
  fluid={false}
>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
    >
      <Jumbotron
        bsClass="jumbotron"
        componentClass="div"
      >
        <h1
          className="capitalized"
        >
          individual
           assessment
        </h1>
      </Jumbotron>
    </Col>
  </Row>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      xs={12}
    >
      <h2>
        Question #
        1
      </h2>
    </Col>
  </Row>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      xs={12}
    >
      <Form
        bsClass="form"
        componentClass="form"
        horizontal={false}
        inline={false}
      >
        <p>
          In a lake, there is a patch of lily pads. Every day, the patch doubles in size. If it takes 48 days for the patch to cover the entire lake, how long would it take for the patch to cover half of the lake?
        </p>
        <ul>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              24
            </Checkbox>
          </li>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              47
            </Checkbox>
          </li>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              96
            </Checkbox>
          </li>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              49
            </Checkbox>
          </li>
        </ul>
      </Form>
    </Col>
  </Row>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      xs={12}
    >
      <ProgressBar
        active={true}
        bsClass="progress-bar"
        isChild={false}
        label="0%"
        max={100}
        min={0}
        now={0}
        srOnly={true}
        striped={false}
      />
    </Col>
  </Row>
  <Connect(StartOver) />
</Grid>
`;

exports[`dumb component renders for team 1`] = `
<Grid
  bsClass="container"
  componentClass="div"
  fluid={false}
>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
    >
      <Jumbotron
        bsClass="jumbotron"
        componentClass="div"
      >
        <h1
          className="capitalized"
        >
          team
           assessment
        </h1>
        <p>
          0
           of 
          0
           team members have answered this question.
        </p>
      </Jumbotron>
    </Col>
  </Row>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      xs={12}
    >
      <h2>
        Question #
        1
      </h2>
    </Col>
  </Row>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      xs={12}
    >
      <Form
        bsClass="form"
        componentClass="form"
        horizontal={false}
        inline={false}
      >
        <p>
          In a lake, there is a patch of lily pads. Every day, the patch doubles in size. If it takes 48 days for the patch to cover the entire lake, how long would it take for the patch to cover half of the lake?
        </p>
        <ul>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              24
            </Checkbox>
          </li>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              47
            </Checkbox>
          </li>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              96
            </Checkbox>
          </li>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              49
            </Checkbox>
          </li>
        </ul>
      </Form>
    </Col>
  </Row>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      xs={12}
    >
      <ProgressBar
        active={true}
        bsClass="progress-bar"
        isChild={false}
        label="0%"
        max={100}
        min={0}
        now={0}
        srOnly={true}
        striped={false}
      />
    </Col>
  </Row>
  <Connect(StartOver)>
    <LinkContainer
      activeClassName="active"
      exact={false}
      replace={false}
      strict={false}
      to="/question/2"
    >
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="success"
        disabled={false}
      >
        Next
      </Button>
    </LinkContainer>
  </Connect(StartOver)>
</Grid>
`;

exports[`dumb component renders team all answered 1`] = `
<Grid
  bsClass="container"
  componentClass="div"
  fluid={false}
>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
    >
      <Jumbotron
        bsClass="jumbotron"
        componentClass="div"
      >
        <h1
          className="capitalized"
        >
          team
           assessment
        </h1>
        <p>
          0
           of 
          1
           team members have answered this question.
        </p>
      </Jumbotron>
    </Col>
  </Row>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      xs={12}
    >
      <h2>
        Question #
        1
      </h2>
    </Col>
  </Row>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      xs={12}
    >
      <Form
        bsClass="form"
        componentClass="form"
        horizontal={false}
        inline={false}
      >
        <p>
          In a lake, there is a patch of lily pads. Every day, the patch doubles in size. If it takes 48 days for the patch to cover the entire lake, how long would it take for the patch to cover half of the lake?
        </p>
        <ul>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              24
            </Checkbox>
          </li>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              47
            </Checkbox>
          </li>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              96
            </Checkbox>
          </li>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              49
            </Checkbox>
          </li>
        </ul>
      </Form>
    </Col>
  </Row>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      xs={12}
    >
      <ProgressBar
        active={true}
        bsClass="progress-bar"
        isChild={false}
        label="0%"
        max={100}
        min={0}
        now={0}
        srOnly={true}
        striped={false}
      />
    </Col>
  </Row>
  <Connect(StartOver)>
    <LinkContainer
      activeClassName="active"
      exact={false}
      replace={false}
      strict={false}
      to="/question/2"
    >
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="success"
        disabled={true}
      >
        Next
      </Button>
    </LinkContainer>
  </Connect(StartOver)>
</Grid>
`;

exports[`dumb component renders team last question 1`] = `
<Grid
  bsClass="container"
  componentClass="div"
  fluid={false}
>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
    >
      <Jumbotron
        bsClass="jumbotron"
        componentClass="div"
      >
        <h1
          className="capitalized"
        >
          team
           assessment
        </h1>
        <p>
          0
           of 
          0
           team members have answered this question.
        </p>
      </Jumbotron>
    </Col>
  </Row>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      xs={12}
    >
      <h2>
        Question #
        2
      </h2>
    </Col>
  </Row>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      xs={12}
    >
      <Form
        bsClass="form"
        componentClass="form"
        horizontal={false}
        inline={false}
      >
        <p>
          A bat and a ball cost $1.10 in total. The bat costs $1.00 more than the ball. How much does the ball cost?
        </p>
        <ul>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              $0.05
            </Checkbox>
          </li>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              $0.06
            </Checkbox>
          </li>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              $0.10
            </Checkbox>
          </li>
          <li>
            <Checkbox
              bsClass="checkbox"
              checked={false}
              disabled={false}
              inline={false}
              title=""
            >
              $0.50
            </Checkbox>
          </li>
        </ul>
      </Form>
    </Col>
  </Row>
  <Row
    bsClass="row"
    componentClass="div"
  >
    <Col
      bsClass="col"
      componentClass="div"
      xs={12}
    >
      <ProgressBar
        active={true}
        bsClass="progress-bar"
        isChild={false}
        label="50%"
        max={100}
        min={0}
        now={50}
        srOnly={true}
        striped={false}
      />
    </Col>
  </Row>
  <Connect(StartOver)>
    <LinkContainer
      activeClassName="active"
      exact={false}
      replace={false}
      strict={false}
      to="/summary"
    >
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="success"
        disabled={false}
      >
        Next
      </Button>
    </LinkContainer>
  </Connect(StartOver)>
</Grid>
`;

exports[`smart component matches snapshot 1`] = `
<withRouter(Question)
  appState={
    Immutable.Map {
      "questions": Immutable.List [
        Immutable.Map {
          "id": 0,
          "text": "In a lake, there is a patch of lily pads. Every day, the patch doubles in size. If it takes 48 days for the patch to cover the entire lake, how long would it take for the patch to cover half of the lake?",
          "truth": 1,
          "myAnswer": null,
          "ourAnswer": null,
          "teamAnswerCount": 0,
          "guesses": Immutable.List [
            Immutable.Map {
              "id": 0,
              "text": "24",
            },
            Immutable.Map {
              "id": 1,
              "text": "47",
            },
            Immutable.Map {
              "id": 2,
              "text": "96",
            },
            Immutable.Map {
              "id": 3,
              "text": "49",
            },
          ],
          "next": 1,
        },
        Immutable.Map {
          "id": 1,
          "text": "A bat and a ball cost $1.10 in total. The bat costs $1.00 more than the ball. How much does the ball cost?",
          "truth": 0,
          "myAnswer": null,
          "ourAnswer": null,
          "teamAnswerCount": 0,
          "guesses": Immutable.List [
            Immutable.Map {
              "id": 0,
              "text": "$0.05",
            },
            Immutable.Map {
              "id": 1,
              "text": "$0.06",
            },
            Immutable.Map {
              "id": 2,
              "text": "$0.10",
            },
            Immutable.Map {
              "id": 3,
              "text": "$0.50",
            },
          ],
          "next": null,
        },
      ],
      "team": Immutable.Map {
        "members": 0,
        "synced": 0,
      },
      "assessmentType": "individual",
    }
  }
  changeHandler={[Function]}
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "notify": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "unsubscribe": null,
    }
  }
/>
`;
