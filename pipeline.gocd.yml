format_version: 3
pipelines:
  Cogniflect:
    group: defaultGroup
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    materials:
      git:
        git: https://github.com/dzwarg/cogniflect.git
        shallow_clone: false
        auto_update: true
        branch: gocd
    environment_variables:
      CI: true
    stages:
    - Build:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          Compile:
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -c
                - docker run --rm --name node-builder --volume node_modules:/app/node_modules --volume /volume1/docker/godata/pipelines/Cogniflect:/app --entrypoint /usr/local/bin/yarn --workdir /app -e CI=$CI node:10
                command: sh
                run_if: passed
    - Test:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          Unit:
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -c
                - docker run --rm --name node-test --volume node_modules:/app/node_modules --volume /volume1/docker/godata/pipelines/Cogniflect:/app --entrypoint /usr/local/bin/yarn --workdir /app -e CI=$CI node:10 run test
                command: sh
                run_if: passed
          Coverage:
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -c
                - docker run --rm --name node-test --volume node_modules:/app/node_modules --volume /volume1/docker/godata/pipelines/Cogniflect:/app --entrypoint /usr/local/bin/yarn --workdir /app -e CI=$CI node:10 run coverage
                command: sh
                run_if: passed
